# from scipy import sparse
# values=np.array([['12.615607','1.028399','0.070979','0.553241']])#,['0.4','0.5','0.6','0.6']])
# print(values)
# #m[inds,np.arange(mshape[1])]=values



# # prediction=kmeans.predict(values)
# # print(prediction)
# out1=[47,  3, 47, 91, 47, 47,  3, 91, 47, 58,  3, 91, 91, 91, 91, 91, 91,
#        91, 47, 47, 91, 91, 91, 91, 11, 11, 91, 92, 47, 92, 92, 92, 92, 73,
#        73, 47, 47,  3, 58, 92,  3, 46,  3, 92, 47,  3, 92, 73, 73, 92, 74,
#        91, 92, 92, 47, 91, 91, 91, 32, 91, 91, 91, 91, 91, 58, 58, 47, 69,
#        47, 69, 58, 91, 47, 47, 73, 91, 92, 47, 91, 91, 92, 47, 92, 47, 92,
#        91, 58, 91, 11, 47, 91, 91, 91, 91, 47, 58, 58,  3, 91, 91, 91, 91,
#        91, 91, 91, 47, 58, 91, 91, 91, 47, 91, 47, 58, 47, 47, 58, 47, 47,
#        80, 47, 58, 58, 58, 58,  3, 47, 47, 11, 91, 47, 47, 47, 47, 47, 47,
#        91, 91, 47, 47, 91, 47, 47, 47, 47, 73, 58, 47, 11, 58, 47, 78, 91,
#        91, 91, 91, 91, 91, 91, 91, 91, 47, 47, 47, 47, 11, 47,  3, 92, 58,
#        91, 91, 91, 91, 91, 91, 47, 47, 58, 47, 91, 11, 11, 11, 11, 47, 91,
#        91, 91, 91, 47, 47, 47, 47, 91, 91, 46, 92,  3, 47,  3,  3, 92, 47,
#        91, 91, 91, 91, 91, 47, 47, 47, 92, 47, 47, 74, 91, 32, 92,  3,  3,
#         3, 91, 91, 92, 47, 91, 91, 90, 92,  3, 47, 47, 91, 58, 91, 91, 91,
#        47, 47,  3, 47, 47,  3, 47, 47, 58, 92, 92, 58, 92, 92, 58, 47, 91,
#        11, 91, 91, 91, 47, 47, 91, 91, 91, 91, 91, 11, 11, 47, 91, 91, 47,
#        47, 47, 58, 47, 47, 92, 58, 91, 91, 47, 11, 47, 91, 91, 91, 47, 91,
#        47, 47, 92, 92, 47, 58, 92,  3, 47, 47, 58, 58, 91,  3, 92, 47, 47,
#        47, 47, 47, 47, 91, 47, 91, 91, 91, 91, 91, 91, 91, 91, 91, 91, 47,
#         3,  3, 92, 91, 91, 92, 47, 91, 91, 47, 47, 58, 47, 58, 91, 91, 91,
#        91, 91,  3, 91, 91,  3, 47, 91,  3, 91, 91, 91, 91, 11, 91, 91, 91,
#        92,  3, 92, 58, 92, 47, 92, 92,  3,  3,  3, 92, 78, 92, 92, 47, 47,
#        92, 11, 91, 11, 11, 91, 91, 91, 91, 94, 91, 91, 91, 91, 91, 91,  3,
#        91, 58, 47,  3, 91, 58, 47,  3, 47, 78,  3, 91, 92, 11, 11, 92, 58,
#        91, 69, 58, 91, 91, 91, 91, 91, 91, 47, 47, 58, 47, 58, 58,  3, 91,
#        47, 47, 58, 91, 91, 91, 91, 91, 91, 91, 11, 91, 91, 91, 91, 91,  3,
#        47, 91, 58, 91, 91, 47, 47, 47, 46, 46, 91, 91, 91, 91, 58, 47, 91,
#        91, 91, 92, 91, 92, 47, 91, 91, 92, 91, 47, 92, 92, 47, 47, 74, 47,
#        91, 91, 91,  3, 91, 91, 91, 91, 91, 91, 47, 91, 92, 91, 47, 91, 91,
#        91, 47, 47, 58, 58, 58, 47, 47, 58, 58, 58, 91, 91, 91, 91, 11, 91,
#        91, 91, 91, 47, 47, 47, 58,  3, 11, 91, 58, 47, 91, 91, 91, 69, 91,
#        91, 91, 47,  3, 58, 58, 91, 11, 47, 47, 47,  3, 58, 58, 58, 92, 58,
#        47, 47, 92, 91, 47, 47,  3, 58, 91, 91, 91, 91, 91, 91, 91, 47, 91,
#        58,  3, 91, 91, 91, 91, 91, 47, 91, 58, 91, 74, 91, 91, 91, 91, 91,
#        92,  3,  3, 92, 92, 91, 58, 11, 91, 91, 91, 91, 91, 91, 91, 91, 91,
#        11, 91, 11, 91, 91, 91, 91, 11, 11, 91, 47, 47, 92, 92, 47, 47, 47,
#        91, 91, 91, 91, 91, 91, 92, 92, 58, 47, 92, 78, 91, 91, 91, 91, 47,
#        47, 47, 80, 91, 47, 91, 91, 91, 91, 91, 47, 58,  3, 47, 47, 91, 91,
#        91, 91, 91, 91, 47, 47, 47, 47, 47, 47, 91, 91, 91, 91, 91, 91, 91,
#        73, 11, 32, 47, 11, 91, 91, 91, 47,  3,  3, 92, 91, 91, 91, 74, 91,
#        11, 91, 47, 92,  3, 91, 92, 92, 92,  3, 91, 47, 47, 58, 58, 58, 92,
#        69, 58, 58, 69, 47, 47, 47, 58, 47, 58, 58, 58, 47, 47, 47, 47, 58,
#        58, 58, 58,  3, 47, 47,  3, 58,  3, 58, 58, 58, 58, 58, 58,  3, 58,
#        47, 47, 47, 58, 91, 91]
# out2=kmeans.fit_predict(df_tr_std)
# out2

# from sklearn import metrics
# metrics.adjusted_rand_score(out1, out2)  

# sns.lmplot('AvP%(dry)', 'AvN%(dry)', 
#            data=df_tr, 
#            fit_reg=False, 
#            hue="clusters",  
#            scatter_kws={"marker": "D", 
#                         "s": 100})
# plt.title('AvP%(dry) vs AvN%(dry)')
# plt.xlabel('AvP%(dry)')
# plt.ylabel('AvN%(dry)')

# fig=plt.figure()
# ax = fig.add_subplot(111,projection='3d')
# ax.scatter(df_tr['AvN%(dry)'],df_tr['AvP%(dry)'],df_tr['AvK%(dry)'],c='y',marker='o');
# ax.set_xlabel('AvN%(dry)')
# ax.set_ylabel('AvP%(dry)')
# ax.set_zlabel('AvK%(dry)')
# plt.show()

#listOutput



# #df_tr.describe
# df_test=df_tr[['AvMoisture%', 'AvN%(dry)', 'AvP%(dry)', 'AvK%(dry)']]
# kmeans.score(df_test.values)



fig=plt.figure()
ax = fig.add_subplot(111,projection='3d')
ax.scatter(df_tr['AvN%(dry)'],df_tr['AvP%(dry)'],df_tr['AvK%(dry)'],c='y',marker='o');
ax.set_xlabel('AvN%(dry)')
ax.set_ylabel('AvP%(dry)')
ax.set_zlabel('AvK%(dry)')
plt.show()


    
#print (df_tr[clmns].groupby(['clusters']).mean())
#df_tr=df_tr[clmns].groupby(['clusters']).mean()
#df_clust